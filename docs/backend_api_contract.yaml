openapi: 3.0.3
info:
  title: Improview Backend API
  version: 0.1.0
  description: >-
    API contract derived from `internal/api.Server`. Endpoints are served under
    the `/api` prefix.
servers:
  - url: https://bh853brv47.execute-api.us-east-1.amazonaws.com
    description: Deployed dev environment ($default stage)
  - url: http://localhost:8080
    description: Local development server proxying the Go HTTP API
paths:
  /api/generate:
    post:
      summary: Generate a new problem pack
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateRequest'
      responses:
        '200':
          description: Problem pack created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /api/attempt:
    post:
      summary: Create an attempt for a problem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAttemptRequest'
      responses:
        '200':
          description: Attempt created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAttemptResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /api/run-tests:
    post:
      summary: Execute tests for a specific attempt
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunTestsRequest'
      responses:
        '200':
          description: Test summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunTestsResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /api/submit:
    post:
      summary: Finalize an attempt and run hidden tests
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitRequest'
      responses:
        '200':
          description: Submission summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /api/attempt/{attempt_id}:
    get:
      summary: Retrieve attempt metadata and runs
      parameters:
        - name: attempt_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Attempt with recorded runs
          content:
            application/json:
              schema:
                type: object
                properties:
                  attempt:
                    $ref: '#/components/schemas/Attempt'
                  runs:
                    type: array
                    items:
                      $ref: '#/components/schemas/RunResult'
                required:
                  - attempt
                  - runs
        default:
          $ref: '#/components/responses/ErrorResponse'
  /api/problem/{problem_id}:
    get:
      summary: Fetch a generated problem pack
      parameters:
        - name: problem_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Problem pack payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemPack'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /api/healthz:
    get:
      summary: Check backend health
      responses:
        '200':
          description: Service healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                required:
                  - status
        default:
          $ref: '#/components/responses/ErrorResponse'
  /api/version:
    get:
      summary: Retrieve backend version
      responses:
        '200':
          description: Version string
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    example: v0.1.0
                required:
                  - version
        default:
          $ref: '#/components/responses/ErrorResponse'
  /api/user/profile:
    get:
      summary: Get authenticated user profile
      responses:
        '200':
          description: User profile payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
    put:
      summary: Upsert authenticated user profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserProfileRequest'
      responses:
        '200':
          description: Updated profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /api/user/saved-problems:
    get:
      summary: List saved problems for the authenticated user
      parameters:
        - name: status
          in: query
          description: Optional status filter
          schema:
            type: string
            enum:
              - in_progress
              - completed
              - archived
        - name: limit
          in: query
          description: Maximum number of items to return (default 50, max 200)
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 200
        - name: next_token
          in: query
          description: Pagination cursor returned from a previous call
          schema:
            type: string
      responses:
        '200':
          description: Saved problem collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedProblemListResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
    post:
      summary: Save a problem for the authenticated user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSavedProblemRequest'
      responses:
        '200':
          description: Saved problem created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedProblemResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /api/user/saved-problems/{saved_problem_id}:
    parameters:
      - name: saved_problem_id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Retrieve a saved problem with attempts
      responses:
        '200':
          description: Full saved problem detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedProblemDetailResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
    put:
      summary: Update saved problem metadata
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSavedProblemRequest'
      responses:
        '200':
          description: Updated saved problem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedProblemResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
    delete:
      summary: Remove a saved problem
      responses:
        '204':
          description: Saved problem deleted
        default:
          $ref: '#/components/responses/ErrorResponse'
  /api/user/saved-problems/{saved_problem_id}/attempts:
    parameters:
      - name: saved_problem_id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: List attempts persisted for a saved problem
      responses:
        '200':
          description: Attempt collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedProblemAttemptsResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
    post:
      summary: Append an attempt snapshot to a saved problem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSavedProblemAttemptRequest'
      responses:
        '200':
          description: Attempt persisted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedProblemAttemptResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
components:
  schemas:
    GenerateRequest:
      type: object
      properties:
        category:
          type: string
        difficulty:
          type: string
        customPrompt:
          type: string
        provider:
          type: string
      required:
        - category
        - difficulty
    GenerateResponse:
      type: object
      properties:
        problem_id:
          type: string
        pack:
          $ref: '#/components/schemas/ProblemPack'
      required:
        - problem_id
        - pack
    CreateAttemptRequest:
      type: object
      properties:
        problem_id:
          type: string
        lang:
          type: string
      required:
        - problem_id
        - lang
    CreateAttemptResponse:
      type: object
      properties:
        attempt:
          $ref: '#/components/schemas/Attempt'
      required:
        - attempt
    RunTestsRequest:
      type: object
      properties:
        attempt_id:
          type: string
        code:
          type: string
        which:
          type: string
      required:
        - attempt_id
        - code
        - which
    RunTestsResponse:
      type: object
      properties:
        summary:
          $ref: '#/components/schemas/RunSummary'
      required:
        - summary
    SubmitRequest:
      type: object
      properties:
        attempt_id:
          type: string
        code:
          type: string
      required:
        - attempt_id
        - code
    SubmitResponse:
      type: object
      properties:
        summary:
          $ref: '#/components/schemas/SubmissionSummary'
      required:
        - summary
    ProblemPack:
      type: object
      properties:
        problem:
          $ref: '#/components/schemas/ProblemMetadata'
        api:
          $ref: '#/components/schemas/APISignature'
        time_estimate_minutes:
          type: integer
          format: int32
        hint:
          type: string
        solutions:
          type: array
          items:
            $ref: '#/components/schemas/SolutionOutline'
        tests:
          $ref: '#/components/schemas/TestSuite'
      required:
        - problem
        - api
        - time_estimate_minutes
        - hint
        - solutions
        - tests
    ProblemMetadata:
      type: object
      properties:
        title:
          type: string
        statement:
          type: string
        constraints:
          type: array
          items:
            type: string
        examples:
          type: array
          items:
            $ref: '#/components/schemas/Example'
        edge_cases:
          type: array
          items:
            type: string
      required:
        - title
        - statement
        - constraints
        - examples
        - edge_cases
    Example:
      type: object
      properties:
        input:
          type: array
          items: {}
        output:
          nullable: true
        explanation:
          type: string
      required:
        - input
        - output
    APISignature:
      type: object
      properties:
        function_name:
          type: string
        signature:
          type: string
        params:
          type: array
          items:
            $ref: '#/components/schemas/APIParam'
        returns:
          $ref: '#/components/schemas/APIParamReturn'
      required:
        - function_name
        - signature
        - params
        - returns
    APIParam:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        desc:
          type: string
      required:
        - name
        - type
        - desc
    APIParamReturn:
      type: object
      properties:
        type:
          type: string
        desc:
          type: string
      required:
        - type
        - desc
    SolutionOutline:
      type: object
      properties:
        approach:
          type: string
        complexity:
          $ref: '#/components/schemas/Complexity'
        code:
          type: string
      required:
        - approach
        - complexity
        - code
    Complexity:
      type: object
      properties:
        time:
          type: string
        space:
          type: string
      required:
        - time
        - space
    TestSuite:
      type: object
      properties:
        public:
          type: array
          items:
            $ref: '#/components/schemas/Example'
        hidden:
          type: array
          items:
            $ref: '#/components/schemas/Example'
      required:
        - public
        - hidden
    Attempt:
      type: object
      properties:
        id:
          type: string
        problem_id:
          type: string
        user_id:
          type: string
        lang:
          type: string
        started_at:
          type: integer
          format: int64
        ended_at:
          type: integer
          format: int64
        hint_used:
          type: boolean
        pass_count:
          type: integer
          format: int32
        fail_count:
          type: integer
          format: int32
        duration_ms:
          type: integer
          format: int64
      required:
        - id
        - problem_id
        - user_id
        - lang
        - started_at
        - ended_at
        - hint_used
        - pass_count
        - fail_count
        - duration_ms
    RunResult:
      type: object
      properties:
        test_id:
          type: string
        status:
          type: string
        time_ms:
          type: integer
          format: int64
        stdout:
          type: string
        stderr:
          type: string
      required:
        - test_id
        - status
        - time_ms
        - stdout
        - stderr
    RunSummary:
      type: object
      properties:
        attempt_id:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/RunResult'
      required:
        - attempt_id
        - results
    SubmissionSummary:
      type: object
      properties:
        attempt_id:
          type: string
        passed:
          type: boolean
        runtime_ms:
          type: integer
          format: int64
        operations:
          type: integer
          format: int64
        hidden_results:
          type: array
          items:
            $ref: '#/components/schemas/RunResult'
      required:
        - attempt_id
        - passed
        - runtime_ms
        - operations
        - hidden_results
    UserProfile:
      type: object
      properties:
        user_id:
          type: string
        handle:
          type: string
        display_name:
          type: string
        bio:
          type: string
        avatar_url:
          type: string
          format: uri
        timezone:
          type: string
        preferences:
          type: object
          additionalProperties:
            type: string
        created_at:
          type: integer
          format: int64
        updated_at:
          type: integer
          format: int64
      required:
        - user_id
        - created_at
        - updated_at
    UserProfileResponse:
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/UserProfile'
      required:
        - profile
    UpdateUserProfileRequest:
      type: object
      properties:
        handle:
          type: string
        display_name:
          type: string
        bio:
          type: string
        avatar_url:
          type: string
          format: uri
        timezone:
          type: string
        preferences:
          type: object
          additionalProperties:
            type: string
      additionalProperties: false
    SavedProblemSummary:
      type: object
      properties:
        id:
          type: string
        problem_id:
          type: string
        title:
          type: string
        language:
          type: string
        status:
          type: string
          enum:
            - in_progress
            - completed
            - archived
        tags:
          type: array
          items:
            type: string
        notes:
          type: string
        hint_unlocked:
          type: boolean
        created_at:
          type: integer
          format: int64
        updated_at:
          type: integer
          format: int64
        last_attempt:
          $ref: '#/components/schemas/AttemptSnapshot'
      required:
        - id
        - problem_id
        - language
        - status
        - created_at
        - updated_at
    SavedProblemDetail:
      allOf:
        - $ref: '#/components/schemas/SavedProblemSummary'
        - type: object
          properties:
            attempts:
              type: array
              items:
                $ref: '#/components/schemas/AttemptSnapshot'
          required:
            - attempts
    SavedProblemResponse:
      type: object
      properties:
        saved_problem:
          $ref: '#/components/schemas/SavedProblemSummary'
      required:
        - saved_problem
    SavedProblemDetailResponse:
      type: object
      properties:
        saved_problem:
          $ref: '#/components/schemas/SavedProblemDetail'
      required:
        - saved_problem
    SavedProblemListResponse:
      type: object
      properties:
        saved_problems:
          type: array
          items:
            $ref: '#/components/schemas/SavedProblemSummary'
        next_token:
          type: string
          nullable: true
      required:
        - saved_problems
    AttemptSummary:
      type: object
      properties:
        attempt_id:
          type: string
        status:
          type: string
          enum:
            - submitted
            - passed
            - failed
        updated_at:
          type: integer
          format: int64
        pass_count:
          type: integer
          format: int32
        fail_count:
          type: integer
          format: int32
      required:
        - attempt_id
        - status
        - updated_at
    AttemptSnapshot:
      allOf:
        - $ref: '#/components/schemas/AttemptSummary'
        - type: object
          properties:
            submitted_at:
              type: integer
              format: int64
              nullable: true
            runtime_ms:
              type: integer
              format: int64
            code:
              type: string
            code_s3_key:
              type: string
          required:
            - runtime_ms
            - code
    SavedProblemAttemptsResponse:
      type: object
      properties:
        attempts:
          type: array
          items:
            $ref: '#/components/schemas/AttemptSnapshot'
      required:
        - attempts
    SavedProblemAttemptResponse:
      type: object
      properties:
        attempt:
          $ref: '#/components/schemas/AttemptSnapshot'
      required:
        - attempt
    CreateSavedProblemRequest:
      type: object
      properties:
        problem_id:
          type: string
        title:
          type: string
        language:
          type: string
        status:
          type: string
          enum:
            - in_progress
            - completed
            - archived
        tags:
          type: array
          items:
            type: string
        notes:
          type: string
        hint_unlocked:
          type: boolean
      required:
        - problem_id
        - language
      additionalProperties: false
    UpdateSavedProblemRequest:
      type: object
      properties:
        status:
          type: string
          enum:
            - in_progress
            - completed
            - archived
        tags:
          type: array
          items:
            type: string
        notes:
          type: string
        hint_unlocked:
          type: boolean
      additionalProperties: false
    CreateSavedProblemAttemptRequest:
      type: object
      properties:
        attempt_id:
          type: string
        code:
          type: string
        status:
          type: string
          enum:
            - submitted
            - passed
            - failed
        pass_count:
          type: integer
          format: int32
        fail_count:
          type: integer
          format: int32
        runtime_ms:
          type: integer
          format: int64
        submitted_at:
          type: integer
          format: int64
          nullable: true
        code_s3_key:
          type: string
      required:
        - attempt_id
        - code
        - status
      additionalProperties: false
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
      required:
        - error
  responses:
    ErrorResponse:
      description: Error response envelope
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
